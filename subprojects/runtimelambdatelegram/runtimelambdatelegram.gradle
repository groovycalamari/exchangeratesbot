/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020 Sergio del Amo.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "jp.classmethod.aws.lambda" version "0.39"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "application"
    id "groovy"
}

version "0.1"
group "groovycalamari"

config {
    bintray    { enabled = false }
    publishing { enabled = false }
    docs {
        groovydoc  { enabled = false }
        javadoc { enabled = false }
    }
}

dependencies {
    runtimeOnly "groovycalamari:telegramlambda:$micronautChatsVersion"
    implementation "software.amazon.awssdk:dynamodb:$dynamoDbVersion"
    implementation project(":exchangeratesbot")
}

shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}
mainClassName = "io.micronaut.function.executor.FunctionApplication"
applicationDefaultJvmArgs = [""]

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
